//! Autogenerated weights for `pallet_preimage`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-07-27, STEPS: `100`, REPEAT: 100, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("fennel-local"), DB CACHE: 1024

// Executed Command:
// ./target/release/fennel-node
// benchmark
// pallet
// --chain=fennel-local
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_preimage
// --extrinsic=*
// --steps=100
// --repeat=100
// --template=./scripts/templates/parachain-weight-template.hbs
// --output=./runtime/fennel/src/weights

#![allow(unused_parens, unused_imports)]
#![allow(clippy::unnecessary_cast, clippy::missing_docs_in_private_items)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions needed for pallet_preimage.
pub trait WeightInfo {
    fn note_preimage(s: u32) -> Weight;
    fn note_requested_preimage(s: u32) -> Weight;
    fn note_no_deposit_preimage(s: u32) -> Weight;
    fn unnote_preimage() -> Weight;
    fn unnote_no_deposit_preimage() -> Weight;
    fn request_preimage() -> Weight;
    fn request_no_deposit_preimage() -> Weight;
    fn request_unnoted_preimage() -> Weight;
    fn request_requested_preimage() -> Weight;
    fn unrequest_preimage() -> Weight;
    fn unrequest_unnoted_preimage() -> Weight;
    fn unrequest_multi_referenced_preimage() -> Weight;
}

/// Weights for pallet_preimage using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_preimage::WeightInfo for SubstrateWeight<T> {
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen) The range of component `s` is `[0, 4194304]`.
    fn note_preimage(s: u32) -> Weight {
        Weight::from_parts(30_000_000, 3556)
            // Standard Error: 0
            .saturating_add(Weight::from_parts(1_518, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen) The range of component `s` is `[0, 4194304]`.
    fn note_requested_preimage(s: u32) -> Weight {
        Weight::from_parts(15_000_000, 3556)
            // Standard Error: 1
            .saturating_add(Weight::from_parts(1_524, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen) The range of component `s` is `[0, 4194304]`.
    fn note_no_deposit_preimage(s: u32) -> Weight {
        Weight::from_parts(15_000_000, 3556)
            // Standard Error: 1
            .saturating_add(Weight::from_parts(1_526, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen)
    fn unnote_preimage() -> Weight {
        Weight::from_parts(59_000_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen)
    fn unnote_no_deposit_preimage() -> Weight {
        Weight::from_parts(33_000_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn request_preimage() -> Weight {
        Weight::from_parts(26_000_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn request_no_deposit_preimage() -> Weight {
        Weight::from_parts(21_000_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn request_unnoted_preimage() -> Weight {
        Weight::from_parts(18_000_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn request_requested_preimage() -> Weight {
        Weight::from_parts(9_000_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen)
    fn unrequest_preimage() -> Weight {
        Weight::from_parts(32_000_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn unrequest_unnoted_preimage() -> Weight {
        Weight::from_parts(11_000_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn unrequest_multi_referenced_preimage() -> Weight {
        Weight::from_parts(12_000_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
}

// For backwards compatibility and tests
impl WeightInfo for () {
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen) The range of component `s` is `[0, 4194304]`.
    fn note_preimage(s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `177`
        //  Estimated: `3556`
        // Minimum execution time: 29_000_000 picoseconds.
        Weight::from_parts(30_000_000, 3556)
            // Standard Error: 0
            .saturating_add(Weight::from_parts(1_518, 0).saturating_mul(s.into()))
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen) The range of component `s` is `[0, 4194304]`.
    fn note_requested_preimage(s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `140`
        //  Estimated: `3556`
        // Minimum execution time: 14_000_000 picoseconds.
        Weight::from_parts(15_000_000, 3556)
            // Standard Error: 1
            .saturating_add(Weight::from_parts(1_524, 0).saturating_mul(s.into()))
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen) The range of component `s` is `[0, 4194304]`.
    fn note_no_deposit_preimage(s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `140`
        //  Estimated: `3556`
        // Minimum execution time: 14_000_000 picoseconds.
        Weight::from_parts(15_000_000, 3556)
            // Standard Error: 1
            .saturating_add(Weight::from_parts(1_526, 0).saturating_mul(s.into()))
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen)
    fn unnote_preimage() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `323`
        //  Estimated: `3556`
        // Minimum execution time: 46_000_000 picoseconds.
        Weight::from_parts(59_000_000, 3556)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen)
    fn unnote_no_deposit_preimage() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `178`
        //  Estimated: `3556`
        // Minimum execution time: 24_000_000 picoseconds.
        Weight::from_parts(33_000_000, 3556)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn request_preimage() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `222`
        //  Estimated: `3556`
        // Minimum execution time: 22_000_000 picoseconds.
        Weight::from_parts(26_000_000, 3556)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn request_no_deposit_preimage() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `178`
        //  Estimated: `3556`
        // Minimum execution time: 14_000_000 picoseconds.
        Weight::from_parts(21_000_000, 3556)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn request_unnoted_preimage() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `76`
        //  Estimated: `3556`
        // Minimum execution time: 12_000_000 picoseconds.
        Weight::from_parts(18_000_000, 3556)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn request_requested_preimage() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `140`
        //  Estimated: `3556`
        // Minimum execution time: 7_000_000 picoseconds.
        Weight::from_parts(9_000_000, 3556)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Preimage PreimageFor (r:0 w:1)
    /// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819,
    /// mode: MaxEncodedLen)
    fn unrequest_preimage() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `178`
        //  Estimated: `3556`
        // Minimum execution time: 24_000_000 picoseconds.
        Weight::from_parts(32_000_000, 3556)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn unrequest_unnoted_preimage() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `140`
        //  Estimated: `3556`
        // Minimum execution time: 8_000_000 picoseconds.
        Weight::from_parts(11_000_000, 3556)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:1)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen)
    fn unrequest_multi_referenced_preimage() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `140`
        //  Estimated: `3556`
        // Minimum execution time: 9_000_000 picoseconds.
        Weight::from_parts(12_000_000, 3556)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
}
