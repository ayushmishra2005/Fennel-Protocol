//! Autogenerated weights for `pallet_democracy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-07-27, STEPS: `100`, REPEAT: 100, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("fennel-local"), DB CACHE: 1024

// Executed Command:
// ./target/release/fennel-node
// benchmark
// pallet
// --chain=fennel-local
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_democracy
// --extrinsic=*
// --steps=100
// --repeat=100
// --template=./scripts/templates/parachain-weight-template.hbs
// --output=./runtime/fennel/src/weights

#![allow(unused_parens, unused_imports)]
#![allow(clippy::unnecessary_cast, clippy::missing_docs_in_private_items)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions needed for pallet_democracy.
pub trait WeightInfo {
    fn propose() -> Weight;
    fn second() -> Weight;
    fn vote_new() -> Weight;
    fn vote_existing() -> Weight;
    fn emergency_cancel() -> Weight;
    fn blacklist() -> Weight;
    fn external_propose() -> Weight;
    fn external_propose_majority() -> Weight;
    fn external_propose_default() -> Weight;
    fn fast_track() -> Weight;
    fn veto_external() -> Weight;
    fn cancel_proposal() -> Weight;
    fn cancel_referendum() -> Weight;
    fn on_initialize_base(r: u32) -> Weight;
    fn on_initialize_base_with_launch_period(r: u32) -> Weight;
    fn delegate(r: u32) -> Weight;
    fn undelegate(r: u32) -> Weight;
    fn clear_public_proposals() -> Weight;
    fn unlock_remove(r: u32) -> Weight;
    fn unlock_set(r: u32) -> Weight;
    fn remove_vote(r: u32) -> Weight;
    fn remove_other_vote(r: u32) -> Weight;
    fn set_external_metadata() -> Weight;
    fn clear_external_metadata() -> Weight;
    fn set_proposal_metadata() -> Weight;
    fn clear_proposal_metadata() -> Weight;
    fn set_referendum_metadata() -> Weight;
    fn clear_referendum_metadata() -> Weight;
}

/// Weights for pallet_democracy using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_democracy::WeightInfo for SubstrateWeight<T> {
    /// Storage: Democracy PublicPropCount (r:1 w:1)
    /// Proof: Democracy PublicPropCount (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy PublicProps (r:1 w:1)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Democracy Blacklist (r:1 w:0)
    /// Proof: Democracy Blacklist (max_values: None, max_size: Some(3238), added: 5713, mode:
    /// MaxEncodedLen) Storage: Democracy DepositOf (r:0 w:1)
    /// Proof: Democracy DepositOf (max_values: None, max_size: Some(3230), added: 5705, mode:
    /// MaxEncodedLen)
    fn propose() -> Weight {
        Weight::from_parts(39_000_000, 18187)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy DepositOf (r:1 w:1)
    /// Proof: Democracy DepositOf (max_values: None, max_size: Some(3230), added: 5705, mode:
    /// MaxEncodedLen)
    fn second() -> Weight {
        Weight::from_parts(36_000_000, 6695)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Balances Locks (r:1 w:1)
    /// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode:
    /// MaxEncodedLen) Storage: Balances Freezes (r:1 w:0)
    /// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode:
    /// MaxEncodedLen)
    fn vote_new() -> Weight {
        Weight::from_parts(47_000_000, 7260)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Balances Locks (r:1 w:1)
    /// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode:
    /// MaxEncodedLen) Storage: Balances Freezes (r:1 w:0)
    /// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode:
    /// MaxEncodedLen)
    fn vote_existing() -> Weight {
        Weight::from_parts(52_000_000, 7260)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy Cancellations (r:1 w:1)
    /// Proof: Democracy Cancellations (max_values: None, max_size: Some(33), added: 2508, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn emergency_cancel() -> Weight {
        Weight::from_parts(24_000_000, 3666)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy PublicProps (r:1 w:1)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Democracy DepositOf (r:1 w:1)
    /// Proof: Democracy DepositOf (max_values: None, max_size: Some(3230), added: 5705, mode:
    /// MaxEncodedLen) Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:3 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen) Storage: Democracy NextExternal (r:1 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy Blacklist (r:0 w:1)
    /// Proof: Democracy Blacklist (max_values: None, max_size: Some(3238), added: 5713, mode:
    /// MaxEncodedLen)
    fn blacklist() -> Weight {
        Weight::from_parts(88_000_000, 18187)
            .saturating_add(T::DbWeight::get().reads(8_u64))
            .saturating_add(T::DbWeight::get().writes(7_u64))
    }
    /// Storage: Democracy NextExternal (r:1 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy Blacklist (r:1 w:0)
    /// Proof: Democracy Blacklist (max_values: None, max_size: Some(3238), added: 5713, mode:
    /// MaxEncodedLen)
    fn external_propose() -> Weight {
        Weight::from_parts(12_000_000, 6703)
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy NextExternal (r:0 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen)
    fn external_propose_majority() -> Weight {
        Weight::from_parts(3_000_000, 0).saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy NextExternal (r:0 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen)
    fn external_propose_default() -> Weight {
        Weight::from_parts(3_000_000, 0).saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy NextExternal (r:1 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumCount (r:1 w:1)
    /// Proof: Democracy ReferendumCount (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:2)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:0 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen)
    fn fast_track() -> Weight {
        Weight::from_parts(26_000_000, 3518)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(5_u64))
    }
    /// Storage: Democracy NextExternal (r:1 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy Blacklist (r:1 w:1)
    /// Proof: Democracy Blacklist (max_values: None, max_size: Some(3238), added: 5713, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn veto_external() -> Weight {
        Weight::from_parts(29_000_000, 6703)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy PublicProps (r:1 w:1)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Democracy DepositOf (r:1 w:1)
    /// Proof: Democracy DepositOf (max_values: None, max_size: Some(3230), added: 5705, mode:
    /// MaxEncodedLen) Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn cancel_proposal() -> Weight {
        Weight::from_parts(70_000_000, 18187)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
    /// Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:0 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen)
    fn cancel_referendum() -> Weight {
        Weight::from_parts(18_000_000, 3518)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Democracy LowestUnbaked (r:1 w:1)
    /// Proof: Democracy LowestUnbaked (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumCount (r:1 w:0)
    /// Proof: Democracy ReferendumCount (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:99 w:0)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn on_initialize_base(r: u32) -> Weight {
        Weight::from_parts(12_646_205, 1489)
            // Standard Error: 4_278
            .saturating_add(Weight::from_parts(2_836_896, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(1_u64))
            .saturating_add(Weight::from_parts(0, 2676).saturating_mul(r.into()))
    }
    /// Storage: Democracy LowestUnbaked (r:1 w:1)
    /// Proof: Democracy LowestUnbaked (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumCount (r:1 w:0)
    /// Proof: Democracy ReferendumCount (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy LastTabledWasExternal (r:1 w:0)
    /// Proof: Democracy LastTabledWasExternal (max_values: Some(1), max_size: Some(1), added: 496,
    /// mode: MaxEncodedLen) Storage: Democracy NextExternal (r:1 w:0)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy PublicProps (r:1 w:0)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:99 w:0)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn on_initialize_base_with_launch_period(r: u32) -> Weight {
        Weight::from_parts(11_499_001, 18187)
            // Standard Error: 5_040
            .saturating_add(Weight::from_parts(2_971_256, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(1_u64))
            .saturating_add(Weight::from_parts(0, 2676).saturating_mul(r.into()))
    }
    /// Storage: Democracy VotingOf (r:3 w:3)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:99 w:99)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Balances Locks (r:1 w:1)
    /// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode:
    /// MaxEncodedLen) Storage: Balances Freezes (r:1 w:0)
    /// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn delegate(r: u32) -> Weight {
        Weight::from_parts(44_370_031, 19800)
            // Standard Error: 4_412
            .saturating_add(Weight::from_parts(4_126_128, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(4_u64))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
            .saturating_add(Weight::from_parts(0, 2676).saturating_mul(r.into()))
    }
    /// Storage: Democracy VotingOf (r:2 w:2)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:99 w:99)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn undelegate(r: u32) -> Weight {
        Weight::from_parts(19_486_178, 13530)
            // Standard Error: 2_894
            .saturating_add(Weight::from_parts(4_128_396, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(2_u64))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
            .saturating_add(Weight::from_parts(0, 2676).saturating_mul(r.into()))
    }
    /// Storage: Democracy PublicProps (r:0 w:1)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen)
    fn clear_public_proposals() -> Weight {
        Weight::from_parts(3_000_000, 0).saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Balances Locks (r:1 w:1)
    /// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode:
    /// MaxEncodedLen) Storage: Balances Freezes (r:1 w:0)
    /// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode:
    /// MaxEncodedLen) Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn unlock_remove(r: u32) -> Weight {
        Weight::from_parts(35_213_897, 7260)
            // Standard Error: 965
            .saturating_add(Weight::from_parts(37_254, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Balances Locks (r:1 w:1)
    /// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode:
    /// MaxEncodedLen) Storage: Balances Freezes (r:1 w:0)
    /// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode:
    /// MaxEncodedLen) Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn unlock_set(r: u32) -> Weight {
        Weight::from_parts(32_930_479, 7260)
            // Standard Error: 995
            .saturating_add(Weight::from_parts(78_382, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) The range of component `r` is `[1, 100]`.
    fn remove_vote(r: u32) -> Weight {
        Weight::from_parts(14_638_375, 7260)
            // Standard Error: 2_268
            .saturating_add(Weight::from_parts(166_154, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) The range of component `r` is `[1, 100]`.
    fn remove_other_vote(r: u32) -> Weight {
        Weight::from_parts(22_651_054, 7260)
            // Standard Error: 2_482
            .saturating_add(Weight::from_parts(87_495, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Democracy NextExternal (r:1 w:0)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Preimage StatusFor (r:1 w:0)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:0 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn set_external_metadata() -> Weight {
        Weight::from_parts(18_000_000, 3556)
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy NextExternal (r:1 w:0)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn clear_external_metadata() -> Weight {
        Weight::from_parts(16_000_000, 3518)
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy PublicProps (r:1 w:0)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Preimage StatusFor (r:1 w:0)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:0 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn set_proposal_metadata() -> Weight {
        Weight::from_parts(38_000_000, 18187)
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy PublicProps (r:1 w:0)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn clear_proposal_metadata() -> Weight {
        Weight::from_parts(35_000_000, 18187)
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:0)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:0 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn set_referendum_metadata() -> Weight {
        Weight::from_parts(13_000_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:0)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn clear_referendum_metadata() -> Weight {
        Weight::from_parts(18_000_000, 3666)
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
}

// For backwards compatibility and tests
impl WeightInfo for () {
    /// Storage: Democracy PublicPropCount (r:1 w:1)
    /// Proof: Democracy PublicPropCount (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy PublicProps (r:1 w:1)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Democracy Blacklist (r:1 w:0)
    /// Proof: Democracy Blacklist (max_values: None, max_size: Some(3238), added: 5713, mode:
    /// MaxEncodedLen) Storage: Democracy DepositOf (r:0 w:1)
    /// Proof: Democracy DepositOf (max_values: None, max_size: Some(3230), added: 5705, mode:
    /// MaxEncodedLen)
    fn propose() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4734`
        //  Estimated: `18187`
        // Minimum execution time: 38_000_000 picoseconds.
        Weight::from_parts(39_000_000, 18187)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy DepositOf (r:1 w:1)
    /// Proof: Democracy DepositOf (max_values: None, max_size: Some(3230), added: 5705, mode:
    /// MaxEncodedLen)
    fn second() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3489`
        //  Estimated: `6695`
        // Minimum execution time: 35_000_000 picoseconds.
        Weight::from_parts(36_000_000, 6695)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Balances Locks (r:1 w:1)
    /// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode:
    /// MaxEncodedLen) Storage: Balances Freezes (r:1 w:0)
    /// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode:
    /// MaxEncodedLen)
    fn vote_new() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3365`
        //  Estimated: `7260`
        // Minimum execution time: 46_000_000 picoseconds.
        Weight::from_parts(47_000_000, 7260)
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Balances Locks (r:1 w:1)
    /// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode:
    /// MaxEncodedLen) Storage: Balances Freezes (r:1 w:0)
    /// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode:
    /// MaxEncodedLen)
    fn vote_existing() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3387`
        //  Estimated: `7260`
        // Minimum execution time: 51_000_000 picoseconds.
        Weight::from_parts(52_000_000, 7260)
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy Cancellations (r:1 w:1)
    /// Proof: Democracy Cancellations (max_values: None, max_size: Some(33), added: 2508, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn emergency_cancel() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `299`
        //  Estimated: `3666`
        // Minimum execution time: 23_000_000 picoseconds.
        Weight::from_parts(24_000_000, 3666)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy PublicProps (r:1 w:1)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Democracy DepositOf (r:1 w:1)
    /// Proof: Democracy DepositOf (max_values: None, max_size: Some(3230), added: 5705, mode:
    /// MaxEncodedLen) Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:3 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen) Storage: Democracy NextExternal (r:1 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy Blacklist (r:0 w:1)
    /// Proof: Democracy Blacklist (max_values: None, max_size: Some(3238), added: 5713, mode:
    /// MaxEncodedLen)
    fn blacklist() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `5843`
        //  Estimated: `18187`
        // Minimum execution time: 87_000_000 picoseconds.
        Weight::from_parts(88_000_000, 18187)
            .saturating_add(RocksDbWeight::get().reads(8_u64))
            .saturating_add(RocksDbWeight::get().writes(7_u64))
    }
    /// Storage: Democracy NextExternal (r:1 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy Blacklist (r:1 w:0)
    /// Proof: Democracy Blacklist (max_values: None, max_size: Some(3238), added: 5713, mode:
    /// MaxEncodedLen)
    fn external_propose() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3349`
        //  Estimated: `6703`
        // Minimum execution time: 12_000_000 picoseconds.
        Weight::from_parts(12_000_000, 6703)
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy NextExternal (r:0 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen)
    fn external_propose_majority() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_000_000 picoseconds.
        Weight::from_parts(3_000_000, 0).saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy NextExternal (r:0 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen)
    fn external_propose_default() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_000_000 picoseconds.
        Weight::from_parts(3_000_000, 0).saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy NextExternal (r:1 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumCount (r:1 w:1)
    /// Proof: Democracy ReferendumCount (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:2)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:0 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen)
    fn fast_track() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `219`
        //  Estimated: `3518`
        // Minimum execution time: 25_000_000 picoseconds.
        Weight::from_parts(26_000_000, 3518)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(5_u64))
    }
    /// Storage: Democracy NextExternal (r:1 w:1)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy Blacklist (r:1 w:1)
    /// Proof: Democracy Blacklist (max_values: None, max_size: Some(3238), added: 5713, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn veto_external() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3452`
        //  Estimated: `6703`
        // Minimum execution time: 28_000_000 picoseconds.
        Weight::from_parts(29_000_000, 6703)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy PublicProps (r:1 w:1)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Democracy DepositOf (r:1 w:1)
    /// Proof: Democracy DepositOf (max_values: None, max_size: Some(3230), added: 5705, mode:
    /// MaxEncodedLen) Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn cancel_proposal() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `5754`
        //  Estimated: `18187`
        // Minimum execution time: 68_000_000 picoseconds.
        Weight::from_parts(70_000_000, 18187)
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().writes(4_u64))
    }
    /// Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:0 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen)
    fn cancel_referendum() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `204`
        //  Estimated: `3518`
        // Minimum execution time: 18_000_000 picoseconds.
        Weight::from_parts(18_000_000, 3518)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
    }
    /// Storage: Democracy LowestUnbaked (r:1 w:1)
    /// Proof: Democracy LowestUnbaked (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumCount (r:1 w:0)
    /// Proof: Democracy ReferendumCount (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:99 w:0)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn on_initialize_base(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `177 + r * (86 ±0)`
        //  Estimated: `1489 + r * (2676 ±0)`
        // Minimum execution time: 6_000_000 picoseconds.
        Weight::from_parts(12_646_205, 1489)
            // Standard Error: 4_278
            .saturating_add(Weight::from_parts(2_836_896, 0).saturating_mul(r.into()))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
            .saturating_add(Weight::from_parts(0, 2676).saturating_mul(r.into()))
    }
    /// Storage: Democracy LowestUnbaked (r:1 w:1)
    /// Proof: Democracy LowestUnbaked (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumCount (r:1 w:0)
    /// Proof: Democracy ReferendumCount (max_values: Some(1), max_size: Some(4), added: 499, mode:
    /// MaxEncodedLen) Storage: Democracy LastTabledWasExternal (r:1 w:0)
    /// Proof: Democracy LastTabledWasExternal (max_values: Some(1), max_size: Some(1), added: 496,
    /// mode: MaxEncodedLen) Storage: Democracy NextExternal (r:1 w:0)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy PublicProps (r:1 w:0)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:99 w:0)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn on_initialize_base_with_launch_period(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `177 + r * (86 ±0)`
        //  Estimated: `18187 + r * (2676 ±0)`
        // Minimum execution time: 9_000_000 picoseconds.
        Weight::from_parts(11_499_001, 18187)
            // Standard Error: 5_040
            .saturating_add(Weight::from_parts(2_971_256, 0).saturating_mul(r.into()))
            .saturating_add(RocksDbWeight::get().reads(5_u64))
            .saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
            .saturating_add(Weight::from_parts(0, 2676).saturating_mul(r.into()))
    }
    /// Storage: Democracy VotingOf (r:3 w:3)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:99 w:99)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Balances Locks (r:1 w:1)
    /// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode:
    /// MaxEncodedLen) Storage: Balances Freezes (r:1 w:0)
    /// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn delegate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `728 + r * (108 ±0)`
        //  Estimated: `19800 + r * (2676 ±0)`
        // Minimum execution time: 38_000_000 picoseconds.
        Weight::from_parts(44_370_031, 19800)
            // Standard Error: 4_412
            .saturating_add(Weight::from_parts(4_126_128, 0).saturating_mul(r.into()))
            .saturating_add(RocksDbWeight::get().reads(5_u64))
            .saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(RocksDbWeight::get().writes(4_u64))
            .saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
            .saturating_add(Weight::from_parts(0, 2676).saturating_mul(r.into()))
    }
    /// Storage: Democracy VotingOf (r:2 w:2)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Democracy ReferendumInfoOf (r:99 w:99)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn undelegate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `425 + r * (108 ±0)`
        //  Estimated: `13530 + r * (2676 ±0)`
        // Minimum execution time: 19_000_000 picoseconds.
        Weight::from_parts(19_486_178, 13530)
            // Standard Error: 2_894
            .saturating_add(Weight::from_parts(4_128_396, 0).saturating_mul(r.into()))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
            .saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
            .saturating_add(Weight::from_parts(0, 2676).saturating_mul(r.into()))
    }
    /// Storage: Democracy PublicProps (r:0 w:1)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen)
    fn clear_public_proposals() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 2_000_000 picoseconds.
        Weight::from_parts(3_000_000, 0).saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Balances Locks (r:1 w:1)
    /// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode:
    /// MaxEncodedLen) Storage: Balances Freezes (r:1 w:0)
    /// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode:
    /// MaxEncodedLen) Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn unlock_remove(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `458`
        //  Estimated: `7260`
        // Minimum execution time: 22_000_000 picoseconds.
        Weight::from_parts(35_213_897, 7260)
            // Standard Error: 965
            .saturating_add(Weight::from_parts(37_254, 0).saturating_mul(r.into()))
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) Storage: Balances Locks (r:1 w:1)
    /// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode:
    /// MaxEncodedLen) Storage: Balances Freezes (r:1 w:0)
    /// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode:
    /// MaxEncodedLen) Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode:
    /// MaxEncodedLen) The range of component `r` is `[0, 99]`.
    fn unlock_set(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `459 + r * (22 ±0)`
        //  Estimated: `7260`
        // Minimum execution time: 31_000_000 picoseconds.
        Weight::from_parts(32_930_479, 7260)
            // Standard Error: 995
            .saturating_add(Weight::from_parts(78_382, 0).saturating_mul(r.into()))
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) The range of component `r` is `[1, 100]`.
    fn remove_vote(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `660 + r * (26 ±0)`
        //  Estimated: `7260`
        // Minimum execution time: 15_000_000 picoseconds.
        Weight::from_parts(14_638_375, 7260)
            // Standard Error: 2_268
            .saturating_add(Weight::from_parts(166_154, 0).saturating_mul(r.into()))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:1)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy VotingOf (r:1 w:1)
    /// Proof: Democracy VotingOf (max_values: None, max_size: Some(3795), added: 6270, mode:
    /// MaxEncodedLen) The range of component `r` is `[1, 100]`.
    fn remove_other_vote(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `660 + r * (26 ±0)`
        //  Estimated: `7260`
        // Minimum execution time: 15_000_000 picoseconds.
        Weight::from_parts(22_651_054, 7260)
            // Standard Error: 2_482
            .saturating_add(Weight::from_parts(87_495, 0).saturating_mul(r.into()))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
    }
    /// Storage: Democracy NextExternal (r:1 w:0)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Preimage StatusFor (r:1 w:0)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:0 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn set_external_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `323`
        //  Estimated: `3556`
        // Minimum execution time: 17_000_000 picoseconds.
        Weight::from_parts(18_000_000, 3556)
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy NextExternal (r:1 w:0)
    /// Proof: Democracy NextExternal (max_values: Some(1), max_size: Some(132), added: 627, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn clear_external_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `219`
        //  Estimated: `3518`
        // Minimum execution time: 15_000_000 picoseconds.
        Weight::from_parts(16_000_000, 3518)
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy PublicProps (r:1 w:0)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Preimage StatusFor (r:1 w:0)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:0 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn set_proposal_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4855`
        //  Estimated: `18187`
        // Minimum execution time: 37_000_000 picoseconds.
        Weight::from_parts(38_000_000, 18187)
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy PublicProps (r:1 w:0)
    /// Proof: Democracy PublicProps (max_values: Some(1), max_size: Some(16702), added: 17197,
    /// mode: MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn clear_proposal_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4755`
        //  Estimated: `18187`
        // Minimum execution time: 34_000_000 picoseconds.
        Weight::from_parts(35_000_000, 18187)
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Preimage StatusFor (r:1 w:0)
    /// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:0 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn set_referendum_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `178`
        //  Estimated: `3556`
        // Minimum execution time: 12_000_000 picoseconds.
        Weight::from_parts(13_000_000, 3556)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// Storage: Democracy ReferendumInfoOf (r:1 w:0)
    /// Proof: Democracy ReferendumInfoOf (max_values: None, max_size: Some(201), added: 2676, mode:
    /// MaxEncodedLen) Storage: Democracy MetadataOf (r:1 w:1)
    /// Proof: Democracy MetadataOf (max_values: None, max_size: Some(53), added: 2528, mode:
    /// MaxEncodedLen)
    fn clear_referendum_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `235`
        //  Estimated: `3666`
        // Minimum execution time: 16_000_000 picoseconds.
        Weight::from_parts(18_000_000, 3666)
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
}
